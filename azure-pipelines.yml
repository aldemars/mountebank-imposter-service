# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Docker@2
    inputs:
      containerRegistry: 'preagendamiento'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Pre Agendamiento (ba10e75d-9812-4287-851a-a380629158f0)'
      azureContainerRegistry: '{"loginServer":"preagendamiento.azurecr.io", "id" : "/subscriptions/ba10e75d-9812-4287-851a-a380629158f0/resourceGroups/pre-agendamiento-front/providers/Microsoft.ContainerRegistry/registries/preagendamiento"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Build services'
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Pre Agendamiento (ba10e75d-9812-4287-851a-a380629158f0)'
      azureContainerRegistry: '{"loginServer":"preagendamiento.azurecr.io", "id" : "/subscriptions/ba10e75d-9812-4287-851a-a380629158f0/resourceGroups/pre-agendamiento-front/providers/Microsoft.ContainerRegistry/registries/preagendamiento"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Push services'
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Pre Agendamiento (ba10e75d-9812-4287-851a-a380629158f0)'
      azureContainerRegistry: '{"loginServer":"preagendamiento.azurecr.io", "id" : "/subscriptions/ba10e75d-9812-4287-851a-a380629158f0/resourceGroups/pre-agendamiento-front/providers/Microsoft.ContainerRegistry/registries/preagendamiento"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Run a Docker Compose command'

